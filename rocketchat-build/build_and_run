#! /bin/sh

error () {
    >&2 printf "[ERROR] %s\n" "$*"
    usage 1
}

debug () {
    [ "$DEBUG" ] && printf "[DEBUG] %s\n" "$*"
}

usage () {
    cat <<EOF
Usage:
    build_and_run -h    [help]
    build_and_run [RocketChat_Repo]
EOF
    exit ${1:-0}
}

validate_repo () {
    # local id=$(curl -s \
    #     -H "Accept: application/vnd.github.v3+json" \
    #     https://api.github.com/repos/$(cd $1 && \
    #         git remote get-url origin | sed -nE 's|.+[:/](rocketchat/rocket.chat)(.git)?$|\1|ip') \
    #     | jq '.id // -1' -r)

    # debug detected id: $id

    # [ "$id" -eq "$RocketChat_REPO_ID" ] \
    #     && debug repository validated. \
    #     || error repository validation failed.

    # ID checking is good and all, but does it really make sense though :/
    # Checking the remote url is good enough.
    cd $1 && \
    git remote get-url origin | grep -iqE '.+[:/](rocketchat/rocket.chat)(.git)?$' \
        && debug repository validated. \
        || error repository validation failed.
    cd ->/dev/null
}

main () {

    [ -z "$1" ] && error repository directory not specified.
    [ "$1" = "-h" ] && usage

    local build_host_dir build_dir
    build_host_dir=$(realpath $1) # Because this path HAS to be absolute.
    build_dir=/$(basename $1) # I like it this way.

    validate_repo $build_host_dir

    >.env cat <<EOF
BUILD_HOST_DIR=$build_host_dir 
BUILD_DIR=$build_dir 
EOF

    debug $(cat .env)

    COMPOSE_INTERACTIVE_NO_CLI=false docker-compose run --service-ports RocketChatBuild
    docker-compose down
    
}

# readonly RocketChat_REPO_ID=35866694

main "$@"
